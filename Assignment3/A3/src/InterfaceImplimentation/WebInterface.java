
package interfaceimplimentation;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import _interface.ObjectFactory;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "webInterface", targetNamespace = "http://Interface/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WebInterface {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeAppointment", targetNamespace = "http://Interface/", className = "_interface.RemoveAppointment")
    @ResponseWrapper(localName = "removeAppointmentResponse", targetNamespace = "http://Interface/", className = "_interface.RemoveAppointmentResponse")
    @Action(input = "http://Interface/webInterface/removeAppointmentRequest", output = "http://Interface/webInterface/removeAppointmentResponse")
    public boolean removeAppointment(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAppointmentSchedule", targetNamespace = "http://Interface/", className = "_interface.GetAppointmentSchedule")
    @ResponseWrapper(localName = "getAppointmentScheduleResponse", targetNamespace = "http://Interface/", className = "_interface.GetAppointmentScheduleResponse")
    @Action(input = "http://Interface/webInterface/getAppointmentScheduleRequest", output = "http://Interface/webInterface/getAppointmentScheduleResponse")
    public String getAppointmentSchedule(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listAppointmentAvailability", targetNamespace = "http://Interface/", className = "_interface.ListAppointmentAvailability")
    @ResponseWrapper(localName = "listAppointmentAvailabilityResponse", targetNamespace = "http://Interface/", className = "_interface.ListAppointmentAvailabilityResponse")
    @Action(input = "http://Interface/webInterface/listAppointmentAvailabilityRequest", output = "http://Interface/webInterface/listAppointmentAvailabilityResponse")
    public String listAppointmentAvailability(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addAppointment", targetNamespace = "http://Interface/", className = "_interface.AddAppointment")
    @ResponseWrapper(localName = "addAppointmentResponse", targetNamespace = "http://Interface/", className = "_interface.AddAppointmentResponse")
    @Action(input = "http://Interface/webInterface/addAppointmentRequest", output = "http://Interface/webInterface/addAppointmentResponse")
    public boolean addAppointment(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "bookAppointment", targetNamespace = "http://Interface/", className = "_interface.BookAppointment")
    @ResponseWrapper(localName = "bookAppointmentResponse", targetNamespace = "http://Interface/", className = "_interface.BookAppointmentResponse")
    @Action(input = "http://Interface/webInterface/bookAppointmentRequest", output = "http://Interface/webInterface/bookAppointmentResponse")
    public boolean bookAppointment(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cancelAppointment", targetNamespace = "http://Interface/", className = "_interface.CancelAppointment")
    @ResponseWrapper(localName = "cancelAppointmentResponse", targetNamespace = "http://Interface/", className = "_interface.CancelAppointmentResponse")
    @Action(input = "http://Interface/webInterface/cancelAppointmentRequest", output = "http://Interface/webInterface/cancelAppointmentResponse")
    public boolean cancelAppointment(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "swapAppointment", targetNamespace = "http://Interface/", className = "_interface.SwapAppointment")
    @ResponseWrapper(localName = "swapAppointmentResponse", targetNamespace = "http://Interface/", className = "_interface.SwapAppointmentResponse")
    @Action(input = "http://Interface/webInterface/swapAppointmentRequest", output = "http://Interface/webInterface/swapAppointmentResponse")
    public boolean swapAppointment(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4);

}
